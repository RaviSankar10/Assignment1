# -*- coding: utf-8 -*-
"""Studentperformance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mYfDLg9PMgB9dHPHJdpAnqD7dWVa3cqf
"""

#first import the required libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#uploading the file from drive
from google.colab import drive
drive.mount('/content/drive')

file_path = '/content/drive/My Drive/StudentsPerformance.csv'

#reading data
import pandas as pd
data = pd.read_csv(file_path)

print(data.isnull().sum())

data.head()

#visualization1
plt.figure(figsize=(12, 6))
plt.subplot(1, 3, 1)
sns.boxplot(x='gender', y='math score', data=data)
plt.title('Math Scores by Gender')

plt.subplot(1, 3, 2)
sns.boxplot(x='gender', y='reading score', data=data)
plt.title('Reading Scores by Gender')

plt.subplot(1, 3, 3)
sns.boxplot(x='gender', y='writing score', data=data)
plt.title('Writing Scores by Gender')

plt.tight_layout()
plt.show()

#visualization2
plt.figure(figsize=(14, 6))
score_types = ['math score', 'reading score', 'writing score']
for i, score_type in enumerate(score_types, 1):
    plt.subplot(1, 3, i)
    data.groupby('race/ethnicity')[score_type].mean().plot(kind='bar')
    plt.title(f'Average {score_type.title()} by Race/Ethnicity')
    plt.ylabel(score_type.title())

plt.tight_layout()
plt.show()

#visualization3
plt.figure(figsize=(12, 8))
sns.histplot(data, x='math score', hue='parental level of education', multiple='stack', palette='Set2')
plt.title('Math Score Distribution by Parental Education Level')
plt.xlabel('Math Score')
plt.ylabel('Count')
plt.show()

#visualization4
plt.figure(figsize=(14, 6))
plt.subplot(1, 3, 1)
sns.violinplot(x='lunch', y='math score', data=data)
plt.title('Math Scores by Lunch Type')

plt.subplot(1, 3, 2)
sns.violinplot(x='lunch', y='reading score', data=data)
plt.title('Reading Scores by Lunch Type')

plt.subplot(1, 3, 3)
sns.violinplot(x='lunch', y='writing score', data=data)
plt.title('Writing Scores by Lunch Type')

plt.tight_layout()
plt.show()

#visualization5
plt.figure(figsize=(14, 6))
subjects = ['math score', 'reading score', 'writing score']
for i, subject in enumerate(subjects, 1):
    plt.subplot(1, 3, i)
    sns.kdeplot(data[data['test preparation course'] == 'none'][subject], label='No Prep', shade=True)
    sns.kdeplot(data[data['test preparation course'] == 'completed'][subject], label='Completed Prep', shade=True)
    plt.title(f'{subject.title()} Distribution\nby Test Preparation Course')
    plt.xlabel(subject.title())
    plt.ylabel('Density')

plt.tight_layout()
plt.legend()
plt.show()